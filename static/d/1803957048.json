{"data":{"doczDb":{"id":"ace00e2b-9c46-5e24-a19a-5ed242ca9c64","db":"{\"config\":{\"title\":\"âš› react-streamdeck\",\"description\":\"React component wrappers for Streamdeck plugin UI\",\"menu\":[],\"version\":\"1.4.0\",\"repository\":\"https://github.com/cmgriffing/react-streamdeck\",\"native\":false,\"themeConfig\":{\"initialColorMode\":\"dark\",\"colors\":{\"modes\":{\"dark\":{\"primary\":\"#6678FF\",\"header\":{\"bg\":\"#070f49\",\"text\":\"#FFFFFF\"},\"sidebar\":{\"bg\":\"#2a2a2a\",\"navGroup\":\"#ACAEBD\",\"navLink\":\"#ACAEBD\",\"navLinkActive\":\"#EBECF3\",\"tocLink\":\"#ACAEBD\",\"tocLinkActive\":\"#EBECF3\"},\"background\":\"#282828\",\"text\":\"#EFF0F3\",\"muted\":\"#ACAEBD\",\"link\":\"#6678FF\",\"props\":{\"highlight\":\"#6678FF\"}}}}},\"separator\":\"-\",\"dest\":\"docs\",\"src\":\"./src\",\"typescript\":true},\"entries\":[{\"key\":\"src/src/documentation/home.mdx\",\"value\":{\"name\":\"Home\",\"route\":\"/\",\"id\":\"504613b6c346d634df4fe8fd93f090c5\",\"filepath\":\"src/src/documentation/home.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/home.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/home.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-home\",\"menu\":\"\",\"headings\":[{\"slug\":\"-react-streamdeck\",\"depth\":1,\"value\":\"âš› react-streamdeck\"},{\"slug\":\"why\",\"depth\":2,\"value\":\"Why?\"},{\"slug\":\"be-warned\",\"depth\":2,\"value\":\"Be Warned\"}]}},{\"key\":\"src/src/documentation/hooks.mdx\",\"value\":{\"name\":\"ðŸ”— Hooks\",\"route\":\"/hooks\",\"id\":\"359eb0ac7d66edd96de10c52e031d0c5\",\"filepath\":\"src/src/documentation/hooks.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/hooks.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/hooks.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-hooks\",\"menu\":\"\",\"headings\":[{\"slug\":\"hooks\",\"depth\":1,\"value\":\"Hooks\"},{\"slug\":\"createusesdaction\",\"depth\":2,\"value\":\"createUseSDAction\"},{\"slug\":\"example\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"createusepluginsettings\",\"depth\":2,\"value\":\"createUsePluginSettings\"},{\"slug\":\"example-1\",\"depth\":3,\"value\":\"Example\"}]}},{\"key\":\"src/src/documentation/installation.mdx\",\"value\":{\"name\":\"Installation\",\"route\":\"/installation\",\"id\":\"661784b4f1302daf850fed5550157416\",\"filepath\":\"src/src/documentation/installation.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/installation.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/installation.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-installation\",\"menu\":\"\",\"headings\":[{\"slug\":\"installation\",\"depth\":1,\"value\":\"Installation\"},{\"slug\":\"commands\",\"depth\":2,\"value\":\"Commands\"},{\"slug\":\"import-sdpi-css\",\"depth\":2,\"value\":\"Import SDPI CSS\"}]}},{\"key\":\"src/src/documentation/usage.mdx\",\"value\":{\"name\":\"Usage\",\"route\":\"/usage\",\"id\":\"8bc40298a5ee7a0bd8cdee9c89e828c8\",\"filepath\":\"src/src/documentation/usage.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/usage.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/usage.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-usage\",\"menu\":\"\",\"headings\":[{\"slug\":\"usage\",\"depth\":1,\"value\":\"Usage\"},{\"slug\":\"components\",\"depth\":2,\"value\":\"Components\"},{\"slug\":\"hooks\",\"depth\":2,\"value\":\"Hooks\"}]}},{\"key\":\"src/src/documentation/components/Button.mdx\",\"value\":{\"name\":\"Button\",\"route\":\"/components/button\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"1c09c15320ce3fced07b36c631ea1cb9\",\"filepath\":\"src/src/documentation/components/Button.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/Button.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/Button.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-button\",\"headings\":[{\"slug\":\"button\",\"depth\":1,\"value\":\"Button\"},{\"slug\":\"example\",\"depth\":2,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/Checkbox.mdx\",\"value\":{\"name\":\"Checkbox\",\"route\":\"/components/checkbox\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"8766c9c07951e8603a864054841461e6\",\"filepath\":\"src/src/documentation/components/Checkbox.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/Checkbox.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/Checkbox.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-checkbox\",\"headings\":[{\"slug\":\"checkbox\",\"depth\":1,\"value\":\"Checkbox\"},{\"slug\":\"example\",\"depth\":2,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/Inputs.mdx\",\"value\":{\"name\":\"Inputs\",\"route\":\"/components/inputs\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"abd0574f9c76d979e7e81e3d58ed36ce\",\"filepath\":\"src/src/documentation/components/Inputs.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/Inputs.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/Inputs.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-inputs\",\"headings\":[{\"slug\":\"inputs\",\"depth\":1,\"value\":\"Inputs\"},{\"slug\":\"text-input\",\"depth\":2,\"value\":\"Text Input\"},{\"slug\":\"example\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":3,\"value\":\"Props\"},{\"slug\":\"number-input\",\"depth\":2,\"value\":\"Number Input\"},{\"slug\":\"example-1\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props-1\",\"depth\":3,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/List.mdx\",\"value\":{\"name\":\"List\",\"route\":\"/components/list\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"1bfad470360e15015f10f7f4c0ade0a7\",\"filepath\":\"src/src/documentation/components/List.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/List.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/List.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-list\",\"headings\":[{\"slug\":\"list\",\"depth\":1,\"value\":\"List\"},{\"slug\":\"sdlist-base\",\"depth\":2,\"value\":\"SDList (Base)\"},{\"slug\":\"example\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":3,\"value\":\"Props\"},{\"slug\":\"sdlistselect\",\"depth\":2,\"value\":\"SDListSelect\"},{\"slug\":\"example-1\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props-1\",\"depth\":3,\"value\":\"Props\"},{\"slug\":\"sdlistmultiselect\",\"depth\":2,\"value\":\"SDListMultiSelect\"},{\"slug\":\"example-2\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props-2\",\"depth\":3,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/MultiCheckbox.mdx\",\"value\":{\"name\":\"MultiCheckbox\",\"route\":\"/components/multi-checkbox\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"b51a08489fce368c4ccf3cfa17e3349c\",\"filepath\":\"src/src/documentation/components/MultiCheckbox.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/MultiCheckbox.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/MultiCheckbox.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-multi-checkbox\",\"headings\":[{\"slug\":\"multicheckbox\",\"depth\":1,\"value\":\"MultiCheckbox\"},{\"slug\":\"example\",\"depth\":2,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/RadioInput.mdx\",\"value\":{\"name\":\"Radio Input\",\"route\":\"/components/radio-input\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"7413bc9022f7900dce097c4c1d2fba2e\",\"filepath\":\"src/src/documentation/components/RadioInput.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/RadioInput.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/RadioInput.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-radio-input\",\"headings\":[{\"slug\":\"radio-input\",\"depth\":1,\"value\":\"Radio Input\"},{\"slug\":\"example\",\"depth\":2,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/RangeSlider.mdx\",\"value\":{\"name\":\"RangeSlider\",\"route\":\"/components/range-slider\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"89675db1a1fff2c87eb9373c2dc705be\",\"filepath\":\"src/src/documentation/components/RangeSlider.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/RangeSlider.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/RangeSlider.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-range-slider\",\"headings\":[{\"slug\":\"rangeslider\",\"depth\":1,\"value\":\"RangeSlider\"},{\"slug\":\"sdrangeslider-base\",\"depth\":2,\"value\":\"SDRangeSlider (Base)\"},{\"slug\":\"example\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":3,\"value\":\"Props\"},{\"slug\":\"sdrangewithlabels\",\"depth\":2,\"value\":\"SDRangeWithLabels\"},{\"slug\":\"example-1\",\"depth\":3,\"value\":\"Example\"},{\"slug\":\"props-1\",\"depth\":3,\"value\":\"Props\"}]}},{\"key\":\"src/src/documentation/components/SelectInput.mdx\",\"value\":{\"name\":\"Select Input\",\"route\":\"/components/select-input\",\"menu\":\"ðŸ”Œ Components\",\"id\":\"9e52cf793b72b296408e7417db68bc57\",\"filepath\":\"src/src/documentation/components/SelectInput.mdx\",\"fullpath\":\"/Volumes/T7/repos/react-streamdeck/src/documentation/components/SelectInput.mdx\",\"link\":\"https://github.com/cmgriffing/react-streamdeck/edit/master/src/src/src/documentation/components/SelectInput.mdx\",\"hidden\":false,\"slug\":\"src-src-documentation-components-select-input\",\"headings\":[{\"slug\":\"select-input\",\"depth\":1,\"value\":\"Select Input\"},{\"slug\":\"example\",\"depth\":2,\"value\":\"Example\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}}],\"props\":[{\"key\":\"src/index.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"SDList\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}},{\"description\":\"\",\"displayName\":\"SDListSelect\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}},{\"description\":\"\",\"displayName\":\"SDListMultiSelect\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}},{\"description\":\"\",\"displayName\":\"SDRangeSlider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"number\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. Passes the raw event back up when the bar is changed. When a min or max is clicked it passes a stubbed event with just a target.value.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}},\"min\":{\"defaultValue\":null,\"description\":\"The minimum numeric value allowed\",\"name\":\"min\",\"required\":true,\"type\":{\"name\":\"number\"}},\"max\":{\"defaultValue\":null,\"description\":\"The maximum numeric value allowed.\",\"name\":\"max\",\"required\":true,\"type\":{\"name\":\"number\"}},\"step\":{\"defaultValue\":null,\"description\":\"The numeric value to increment or decrement the slider by.\",\"name\":\"step\",\"required\":true,\"type\":{\"name\":\"number\"}},\"showMinMax\":{\"defaultValue\":null,\"description\":\"When true, shows the min and max values on their respective ends of the slider.\",\"name\":\"showMinMax\",\"required\":true,\"type\":{\"name\":\"boolean\"}}}},{\"description\":\"\",\"displayName\":\"SDRangeWithLabels\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"number\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. Passes the raw event back up when the bar is changed. When a min or max is clicked it passes a stubbed event with just a target.value.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}},\"min\":{\"defaultValue\":null,\"description\":\"The minimum numeric value allowed\",\"name\":\"min\",\"required\":true,\"type\":{\"name\":\"number\"}},\"max\":{\"defaultValue\":null,\"description\":\"The maximum numeric value allowed.\",\"name\":\"max\",\"required\":true,\"type\":{\"name\":\"number\"}},\"step\":{\"defaultValue\":null,\"description\":\"The numeric value to increment or decrement the slider by.\",\"name\":\"step\",\"required\":true,\"type\":{\"name\":\"number\"}},\"showMinMax\":{\"defaultValue\":null,\"description\":\"When true, shows the min and max values on their respective ends of the slider.\",\"name\":\"showMinMax\",\"required\":true,\"type\":{\"name\":\"boolean\"}}}},{\"description\":\"\",\"displayName\":\"createUseSDAction\",\"methods\":[],\"props\":{}},{\"description\":\"\",\"displayName\":\"src\",\"methods\":[],\"props\":{\"useReducer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useReducer\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useEffect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useEffect\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useState\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useState\",\"required\":true,\"type\":{\"name\":\"Function\"}}}}]},{\"key\":\"src/components/Button.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Button\",\"methods\":[],\"props\":{\"text\":{\"defaultValue\":null,\"description\":\"The text that will be inside the button\",\"name\":\"text\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"The click handler. It passes the synthetic click event directly back up.\",\"name\":\"onClick\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}}}}]},{\"key\":\"src/components/Checkbox.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Checkbox\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"any\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"checkboxLabel\":{\"defaultValue\":null,\"description\":\"This is the label that sits to the right of the checkbox. It handles a click event as well.\",\"name\":\"checkboxLabel\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The event and value passed back up from the component when changed. The value is used to not have to coerce the boolean from a string (due to HTML).\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any, value: any) => {}\"}}}}]},{\"key\":\"src/components/List.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"SDList\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}},{\"description\":\"\",\"displayName\":\"SDListSelect\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}},{\"description\":\"\",\"displayName\":\"SDListMultiSelect\",\"methods\":[],\"props\":{\"options\":{\"defaultValue\":null,\"description\":\"The full list of options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It sends up the unique list of options selected. This is only used when `isSelectable` is true;\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(values: any[]) => {}\"}},\"isSelectable\":{\"defaultValue\":null,\"description\":\"Whether to allow a value or values to be selected.\",\"name\":\"isSelectable\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"selectedOptions\":{\"defaultValue\":null,\"description\":\"The initially selected values to be passed in.\",\"name\":\"selectedOptions\",\"required\":true,\"type\":{\"name\":\"any[]\"}},\"isMultiSelect\":{\"defaultValue\":null,\"description\":\"Whether multiple items can be selected. Depends on `isSelectable` being true.\",\"name\":\"isMultiSelect\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"isOrdered\":{\"defaultValue\":null,\"description\":\"When true, shows html ordered list. `<ol>` instead of `<ul>`.\",\"name\":\"isOrdered\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"orderedOptions\":{\"defaultValue\":null,\"description\":\"The options able to be passed to an `<ol>`.\",\"name\":\"orderedOptions\",\"required\":false,\"type\":{\"name\":\"{ isReversed: boolean; start: number; type: OrderedListTypes; } | undefined\"}}}}]},{\"key\":\"src/components/MultiCheckbox.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"MultiCheckbox\",\"methods\":[],\"props\":{\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"options\":{\"defaultValue\":null,\"description\":\"The available options and their checked value.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"MultiCheckboxAvailableOption[]\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change handler. It passes the raw event and the changed options with their updated values.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any, options: MultiCheckboxAvailableOption[]) => {}\"}}}}]},{\"key\":\"src/components/NumberInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"NumberInput\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial numeric value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"number\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change handler. It passes the event up directly.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}}}}]},{\"key\":\"src/components/RadioInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"RadioInput\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initially selected value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"any\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change handler. It passes the raw event and the selected option's value up.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any, value: any) => {}\"}},\"options\":{\"defaultValue\":null,\"description\":\"The available options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"RadioOption[]\"}}}}]},{\"key\":\"src/components/RangeSlider.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"SDRangeSlider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"number\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. Passes the raw event back up when the bar is changed. When a min or max is clicked it passes a stubbed event with just a target.value.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}},\"min\":{\"defaultValue\":null,\"description\":\"The minimum numeric value allowed\",\"name\":\"min\",\"required\":true,\"type\":{\"name\":\"number\"}},\"max\":{\"defaultValue\":null,\"description\":\"The maximum numeric value allowed.\",\"name\":\"max\",\"required\":true,\"type\":{\"name\":\"number\"}},\"step\":{\"defaultValue\":null,\"description\":\"The numeric value to increment or decrement the slider by.\",\"name\":\"step\",\"required\":true,\"type\":{\"name\":\"number\"}},\"showMinMax\":{\"defaultValue\":null,\"description\":\"When true, shows the min and max values on their respective ends of the slider.\",\"name\":\"showMinMax\",\"required\":true,\"type\":{\"name\":\"boolean\"}}}},{\"description\":\"\",\"displayName\":\"SDRangeWithLabels\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial value to be passed in.\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"number\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. Passes the raw event back up when the bar is changed. When a min or max is clicked it passes a stubbed event with just a target.value.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}},\"min\":{\"defaultValue\":null,\"description\":\"The minimum numeric value allowed\",\"name\":\"min\",\"required\":true,\"type\":{\"name\":\"number\"}},\"max\":{\"defaultValue\":null,\"description\":\"The maximum numeric value allowed.\",\"name\":\"max\",\"required\":true,\"type\":{\"name\":\"number\"}},\"step\":{\"defaultValue\":null,\"description\":\"The numeric value to increment or decrement the slider by.\",\"name\":\"step\",\"required\":true,\"type\":{\"name\":\"number\"}},\"showMinMax\":{\"defaultValue\":null,\"description\":\"When true, shows the min and max values on their respective ends of the slider.\",\"name\":\"showMinMax\",\"required\":true,\"type\":{\"name\":\"boolean\"}}}}]},{\"key\":\"src/components/SelectInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"SelectInput\",\"methods\":[],\"props\":{\"selectedOption\":{\"defaultValue\":null,\"description\":\"The initially selected option value.\",\"name\":\"selectedOption\",\"required\":true,\"type\":{\"name\":\"any\"}},\"options\":{\"defaultValue\":null,\"description\":\"The available options to be selected from.\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"{ value: any; label: string; }[]\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It passes up the selected option's value.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(selectedValue: any) => {}\"}},\"allowEmpty\":{\"defaultValue\":null,\"description\":\"Allow the selection to be empty. Starts as default value when true. Defaults to true\",\"name\":\"allowEmpty\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/TextInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"TextInput\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"The initial text value\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"string\"}},\"label\":{\"defaultValue\":null,\"description\":\"The label. This sits on the outside left margin within the Property Inspector.\",\"name\":\"label\",\"required\":true,\"type\":{\"name\":\"string\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"The change event. It passes the event directly.\",\"name\":\"onChange\",\"required\":true,\"type\":{\"name\":\"(event: any) => {}\"}}}}]},{\"key\":\"src/hooks/action.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"createUseSDAction\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/hooks/baseSettings.tsx\",\"value\":[]},{\"key\":\"src/hooks/settings.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"createUsePluginSettings\",\"methods\":[],\"props\":{\"useReducer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useReducer\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useEffect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useEffect\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useState\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useState\",\"required\":true,\"type\":{\"name\":\"Function\"}}}},{\"description\":\"\",\"displayName\":\"createUseGlobalSettings\",\"methods\":[],\"props\":{\"useReducer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useReducer\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useEffect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useEffect\",\"required\":true,\"type\":{\"name\":\"Function\"}},\"useState\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useState\",\"required\":true,\"type\":{\"name\":\"Function\"}}}}]}]}"}}}