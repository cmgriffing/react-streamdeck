{"version":3,"sources":["webpack:///../src/documentation/components/RadioInput.mdx"],"names":["window","radioOptions","label","value","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","useState","Props","Playground","SDRadioInput","DemoStateContainer","className","initialState","radioState","setState","state","options","onChange","event","console","log","target","of","isMDXComponent"],"mappings":"whBAUAA,OAAOC,aAAe,CAAC,CACrBC,MAAO,WACPC,MAAO,YACN,CACDD,MAAO,WACPC,MAAO,aAEF,IAAMC,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAIA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mgBAAwgBC,QAAS,CACljBJ,QACAH,kBACAQ,oBACAC,UACAC,eACAC,iBACAC,wBACCR,QAAQ,cACb,mBAAKS,UAAU,qBACb,YAAC,IAAD,CAAoBC,aAAc,CAC5BC,WAAY,IACXX,QAAQ,uBACZ,gBACKY,EADL,EACKA,SAEED,EAHP,EAEKE,MACEF,WAHP,OAKS,YAAC,IAAD,CAAcpB,MAAM,cAAcC,MAAOmB,EAAYG,QAASxB,aAAcyB,SAAU,SAACC,EAAOxB,GAClGyB,QAAQC,IAAI,iBAAkBF,EAAMG,OAAO3B,MAAOA,GAClDoB,EAAS,CACPD,WAAYnB,KAEbQ,QAAQ,sBAIjB,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOoB,GAAIb,IAAcP,QAAQ,gB,2NAKrCH,EAAWwB,gBAAiB","file":"component---src-documentation-components-radio-input-mdx-2d1f22054d8b11a4556e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cmgriffing/repos/open-source/react-streamdeck/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from \"react\";\nimport { Props, Playground } from \"docz\";\nimport SDRadioInput from \"../../components/RadioInput\";\nimport DemoStateContainer from \"react-component-component\";\nwindow.radioOptions = [{\n  label: \"Option 1\",\n  value: \"option-1\"\n}, {\n  label: \"Option 2\",\n  value: \"option-2\"\n}];\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"radio-input\"\n    }}>{`Radio Input`}</h1>\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<div class=\\\"docz-sdpi-wrapper\\\">\\n  <DemoStateContainer\\n    initialState={{\\n      radioState: \\'\\',\\n    }}\\n  >\\n    {({ setState, state: { radioState } }) => (\\n      <SDRadioInput\\n        label=\\\"Radio Input\\\"\\n        value={radioState}\\n        options={radioOptions}\\n        onChange={(event, value) => {\\n          console.log(\\'I was changed.\\', event.target.value, value)\\n          setState({\\n            radioState: value,\\n          })\\n        }}\\n      />\\n    )}\\n  </DemoStateContainer>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Props,\n      Playground,\n      SDRadioInput,\n      DemoStateContainer\n    }} mdxType=\"Playground\">\n  <div className=\"docz-sdpi-wrapper\">\n    <DemoStateContainer initialState={{\n          radioState: ''\n        }} mdxType=\"DemoStateContainer\">\n      {({\n            setState,\n            state: {\n              radioState\n            }\n          }) => <SDRadioInput label=\"Radio Input\" value={radioState} options={radioOptions} onChange={(event, value) => {\n            console.log(\"I was changed.\", event.target.value, value);\n            setState({\n              radioState: value\n            });\n          }} mdxType=\"SDRadioInput\" />}\n    </DemoStateContainer>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={SDRadioInput} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}