{"version":3,"sources":["webpack:///../src/documentation/components/List.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Props","Playground","SDList","SDListSelect","SDListMultiSelect","DemoStateContainer","listOptions","className","label","options","of","initialState","listState","setState","state","selectedOptions","onChange","value","console","log","parentName","isMDXComponent"],"mappings":"whBAUO,IAAMA,EAAe,Q,uNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAIA,iBAAQ,CACN,GAAM,eADR,iBAGA,gIACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2FAAgGC,SAAO,GACxIJ,QACAH,kBACAQ,UACAC,eACAC,WACAC,iBACAC,sBACAC,uBACAC,iBATwI,gBAUxId,IAVwI,EAWxIH,eAXwI,GAYvIO,QAAQ,cACb,mBAAKW,UAAU,qBACb,YAAC,IAAD,CAAQC,MAAM,OAAOC,QAASH,IAAaV,QAAQ,aAGnD,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOc,GAAIR,IAAQN,QAAQ,UAC3B,iBAAQ,CACN,GAAM,gBADR,gBAGA,kGACA,iBAAQ,CACN,GAAM,aADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ifAAsfC,SAAO,GAC9hBJ,QACAH,kBACAQ,UACAC,eACAC,WACAC,iBACAC,sBACAC,uBACAC,iBAT8hB,gBAU9hBd,IAV8hB,EAW9hBH,eAX8hB,GAY7hBO,QAAQ,cACb,mBAAKW,UAAU,qBACb,YAAC,IAAD,CAAoBI,aAAc,CAC5BC,UAAW,IACVhB,QAAQ,uBACZ,gBACKiB,EADL,EACKA,SAEED,EAHP,EAEKE,MACEF,UAHP,OAKS,YAAC,IAAD,CAAcJ,MAAM,oBAAoBO,gBAAiBH,EAAWH,QAASH,IAAaU,SAAU,SAAAC,GACxGC,QAAQC,IAAI,iBAAkBF,GAC9BJ,EAAS,CACPD,UAAWK,KAEZrB,QAAQ,sBAIjB,iBAAQ,CACN,GAAM,WADR,SAGA,4BAAW,mBAAGwB,WAAW,KAAQ,CAC7B,KAAQ,WADD,cAAX,yBAEiD,0BAAYA,WAAW,KAAvB,sBAFjD,oBAGA,iBAAQ,CACN,GAAM,qBADR,qBAGA,kGACA,iBAAQ,CACN,GAAM,aADR,WAGA,YAAC,IAAD,CAAYvB,WAAY,EAAGC,OAAQ,4fAAigBC,SAAO,GACziBJ,QACAH,kBACAQ,UACAC,eACAC,WACAC,iBACAC,sBACAC,uBACAC,iBATyiB,gBAUziBd,IAVyiB,EAWziBH,eAXyiB,GAYxiBO,QAAQ,cACb,mBAAKW,UAAU,qBACb,YAAC,IAAD,CAAoBI,aAAc,CAC5BC,UAAW,IACVhB,QAAQ,uBACZ,gBACKiB,EADL,EACKA,SAEED,EAHP,EAEKE,MACEF,UAHP,OAKS,YAAC,IAAD,CAAmBJ,MAAM,0BAA0BO,gBAAiBH,EAAWH,QAASH,IAAaU,SAAU,SAAAC,GACnHC,QAAQC,IAAI,iBAAkBF,GAC9BJ,EAAS,CACPD,UAAWK,KAEZrB,QAAQ,2BAIjB,iBAAQ,CACN,GAAM,WADR,SAGA,4BAAW,mBAAGwB,WAAW,KAAQ,CAC7B,KAAQ,WADD,cAAX,yBAEiD,0BAAYA,WAAW,KAAvB,sBAFjD,QAEwH,0BAAYA,WAAW,KAAvB,uBAFxH,0B,qNAOJ3B,EAAW4B,gBAAiB","file":"component---src-documentation-components-list-mdx-acd308075639e5145a83.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Volumes/T7/repos/react-streamdeck/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props, Playground } from \"docz\";\nimport { SDList, SDListSelect, SDListMultiSelect } from \"../../components/List\";\nimport DemoStateContainer from \"react-component-component\";\nimport { listOptions } from '../fixtures';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n\n    <h2 {...{\n      \"id\": \"sdlist-base\"\n    }}>{`SDList (Base)`}</h2>\n    <p>{`This is the base List component. Other List components wrap this one with other default config options.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Playground __position={0} __code={'<div class=\\\"docz-sdpi-wrapper\\\">\\n  <SDList label=\\\"List\\\" options={listOptions} />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Props,\n      Playground,\n      SDList,\n      SDListSelect,\n      SDListMultiSelect,\n      DemoStateContainer,\n      listOptions,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"docz-sdpi-wrapper\">\n    <SDList label=\"List\" options={listOptions} mdxType=\"SDList\" />\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={SDList} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"sdlistselect\"\n    }}>{`SDListSelect`}</h2>\n    <p>{`This component is a single selectable list that wraps the base component.`}</p>\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h3>\n    <Playground __position={2} __code={'<div class=\\\"docz-sdpi-wrapper\\\">\\n  <DemoStateContainer\\n    initialState={{\\n      listState: \\'\\',\\n    }}\\n  >\\n    {({ setState, state: { listState } }) => (\\n      <SDListSelect\\n        label=\\\"List (selectable)\\\"\\n        selectedOptions={listState}\\n        options={listOptions}\\n        onChange={value => {\\n          console.log(\\'I was changed.\\', value)\\n          setState({\\n            listState: value,\\n          })\\n        }}\\n      />\\n    )}\\n  </DemoStateContainer>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Props,\n      Playground,\n      SDList,\n      SDListSelect,\n      SDListMultiSelect,\n      DemoStateContainer,\n      listOptions,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"docz-sdpi-wrapper\">\n    <DemoStateContainer initialState={{\n          listState: ''\n        }} mdxType=\"DemoStateContainer\">\n      {({\n            setState,\n            state: {\n              listState\n            }\n          }) => <SDListSelect label=\"List (selectable)\" selectedOptions={listState} options={listOptions} onChange={value => {\n            console.log(\"I was changed.\", value);\n            setState({\n              listState: value\n            });\n          }} mdxType=\"SDListSelect\" />}\n    </DemoStateContainer>\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props-1\"\n    }}>{`Props`}</h3>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#props\"\n      }}>{`Base Props`}</a>{`. This wrapper passes `}<inlineCode parentName=\"p\">{`isSelectable: true`}</inlineCode>{` under the hood.`}</p>\n    <h2 {...{\n      \"id\": \"sdlistmultiselect\"\n    }}>{`SDListMultiSelect`}</h2>\n    <p>{`This component is a single selectable list that wraps the base component.`}</p>\n    <h3 {...{\n      \"id\": \"example-2\"\n    }}>{`Example`}</h3>\n    <Playground __position={3} __code={'<div class=\\\"docz-sdpi-wrapper\\\">\\n  <DemoStateContainer\\n    initialState={{\\n      listState: \\'\\',\\n    }}\\n  >\\n    {({ setState, state: { listState } }) => (\\n      <SDListMultiSelect\\n        label=\\\"List (multi selectable)\\\"\\n        selectedOptions={listState}\\n        options={listOptions}\\n        onChange={value => {\\n          console.log(\\'I was changed.\\', value)\\n          setState({\\n            listState: value,\\n          })\\n        }}\\n      />\\n    )}\\n  </DemoStateContainer>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Props,\n      Playground,\n      SDList,\n      SDListSelect,\n      SDListMultiSelect,\n      DemoStateContainer,\n      listOptions,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"docz-sdpi-wrapper\">\n    <DemoStateContainer initialState={{\n          listState: ''\n        }} mdxType=\"DemoStateContainer\">\n      {({\n            setState,\n            state: {\n              listState\n            }\n          }) => <SDListMultiSelect label=\"List (multi selectable)\" selectedOptions={listState} options={listOptions} onChange={value => {\n            console.log(\"I was changed.\", value);\n            setState({\n              listState: value\n            });\n          }} mdxType=\"SDListMultiSelect\" />}\n    </DemoStateContainer>\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props-2\"\n    }}>{`Props`}</h3>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#props\"\n      }}>{`Base Props`}</a>{`. This wrapper passes `}<inlineCode parentName=\"p\">{`isSelectable: true`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`isMultiSelect: true`}</inlineCode>{` under the hood.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}