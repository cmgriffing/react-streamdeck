{"version":3,"sources":["webpack:///../src/documentation/home.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,sBAGA,0IACA,iBAAQ,CACN,GAAM,OADR,QAGA,2SACA,iBAAQ,CACN,GAAM,aADR,aAGA,6NACA,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,0DADT,gE,0MAOPJ,EAAWK,gBAAiB","file":"component---src-documentation-home-mdx-f4160af9ebb18bd09626.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Volumes/T7/repos/react-streamdeck/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"-react-streamdeck\"\n    }}>{`âš› react-streamdeck`}</h1>\n    <p>{`A set of React components to encapsulate the elements needed to make a streamdeck plugin's property inspector UI.`}</p>\n    <h2 {...{\n      \"id\": \"why\"\n    }}>{`Why?`}</h2>\n    <p>{`The StreamDeck is a fantastic piece of hardware with some useful software to accompany it. Making plugins for this software can be done with JS or C++. When using JS, the vanilla JS and HTML needed can be a bit cumbersome. This project aims to make that a little bit better.`}</p>\n    <h2 {...{\n      \"id\": \"be-warned\"\n    }}>{`Be Warned`}</h2>\n    <p>{`These components are a great first step. But integrating them into an existing project or plugin can be a lot of work. There is a CLI tool that can help with scaffolding a React-ified boilerplate:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://cmgriffing.github.io/create-streamdeck-plugin\"\n      }}>{`https://cmgriffing.github.io/create-streamdeck-plugin`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}