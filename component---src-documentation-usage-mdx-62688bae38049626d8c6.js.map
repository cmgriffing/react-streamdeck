{"version":3,"sources":["webpack:///../src/documentation/usage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,kIACA,iBAAQ,CACN,GAAM,cADR,cAGA,wJACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,mOAeL,iBAAQ,CACN,GAAM,SADR,SAGA,0QACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kY,2MA6BTJ,EAAWK,gBAAiB","file":"component---src-documentation-usage-mdx-62688bae38049626d8c6.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cmgriffing/repos/open-source/react-streamdeck/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <p>{`Using this library will be similar to using any other component library with a couple notable exceptions.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`The components are pure components and will work with most existing React applications. They do not use any hooks on their own.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { SDButton } from 'react-streamdeck';\n\nexport default App() {\n  return (\n    <SDButton\n      text=\"Click Me!!!\"\n      onClick={(event) => {\n        console.log('I was clicked.');\n      }}\n    />\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h2>\n    <p>{`The hooks are a different story. We currently export higher order functions that require dependent hooks to be injected into a factory function. This allows us to not conflict with the existing React hooks versions you may have in your code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nimport { useState, useEffect } from 'React';\nimport { createUseSDAction } from 'react-streamdeck';\n\nconst useSDAction = createUseSDAction({\n  useState,\n  useEffect\n})\n\nexport default App() {\n\n  const connected = useSDAction('connected');\n\n  return (\n    <div>\n      <pre><code>\n        {JSON.stringify(connected)}\n      </code></pre>\n    </div>\n  )\n}\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}